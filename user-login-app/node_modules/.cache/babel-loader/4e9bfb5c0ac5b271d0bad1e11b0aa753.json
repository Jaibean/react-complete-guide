{"ast":null,"code":"var _jsxFileName = \"/Users/jaimiebertoli/Documents/GitHub/react-complete-guide/user-login-app/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isloggedIn, setIsloggedIn] = useState(false);\n  useEffect(() => {\n    const storedInfo = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedInfo === \"1\") {\n      setIsloggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsloggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsloggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"/HB7TMWRYZJRySDNFV3wayAcC3A=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/jaimiebertoli/Documents/GitHub/react-complete-guide/user-login-app/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","props","isloggedIn","setIsloggedIn","storedInfo","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFoB,CAApB,CAApB;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAU,KAAK,GAAnB,EAAwB;AACtBD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALM,EAKJ,EALI,CAAT;;AAOA,QAAMI,aAAa,GAAG,MAAM;AACxBF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAA,cAAuBF,KAAK,CAACU;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CApBM;;GAAMX,mB;;KAAAA,mB;AAsBb,eAAeJ,WAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isloggedIn, setIsloggedIn] = useState(false);\n\n    useEffect(() => {\n        const storedInfo = localStorage.getItem(\"isLoggedIn\");\n        if (storedInfo === \"1\") {\n          setIsloggedIn(true);\n        }\n      }, []);\n\n    const logoutHandler = () => {\n        localStorage.removeItem(\"isLoggedIn\");\n        setIsloggedIn(false);\n    };\n\n    const loginHandler = () => {\n        localStorage.setItem(\"isLoggedIn\", \"1\");\n        setIsloggedIn(true);\n    };\n    return <AuthContext.Provider>{props.children}</AuthContext.Provider>\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}